#include "keymap.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define NUM 6
#define U_MOUSE_MOVE_MAX 5000  // 新しい最大速度設定（デフォルトは600）

#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <50>;  // 最大速度に達するまでの時間（デフォルトは500）
};

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N9 &kp LS(H) &kp O &kp T &kp S &kp P &kp A &kp C &kp E>;
            label = "LOGIN";
        };

        bitw: bitw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N &kp N &kp U &kp E &kp N &kp D &kp O &kp JP_AT &kp N3 &kp N6 &kp N6 &kp N4>;
            label = "BITW";
        };

        bt0: bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 2 &tog_off 3>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 0>,
                <&macro_wait_time 500>;

            label = "BT0";
        };

        bt1: bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 2 &tog_off 3>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 1>,
                <&macro_wait_time 500>,
                <&tog_on 1>;

            label = "BT1";
        };

        bt2: bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 2 &tog_off 3>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 2>,
                <&macro_wait_time 500>,
                <&tog_on 2>;

            label = "BT2";
        };

        bt3: bt3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_off 1 &tog_off 2 &tog_off 3>,
                <&macro_wait_time 200>,
                <&bt BT_SEL 3>,
                <&macro_wait_time 500>,
                <&tog_on 3>;

            label = "BT3";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp JP_Q             &kp JP_W      &kp JP_E      &kp JP_R                  &kp JP_T                                                   &kp JP_Y     &kp JP_U  &kp JP_I  &kp JP_O  &kp JP_P
&kp JP_A             &kp JP_S      &kp JP_D      &kp JP_F                  &kp JP_G     &kp LC(V)                      &kp JP_EQUAL   &kp JP_H     &kp JP_J  &kp JP_K  &kp JP_L  &kp JP_MINUS
&mt LEFT_SHIFT JP_Z  &kp JP_X      &kp JP_C      &kp JP_V                  &kp JP_B     &kp LC(C)                      &kp JP_PLUS    &kp JP_N     &kp JP_M  &mkp MB1  &mkp MB2  &lt 10 JP_COMMA
&kp LCTRL            &kp LEFT_WIN  &kp LEFT_ALT  &lt 4 JP_MHEN  &lt 5 SPACE  &lt 10 JP_HENK      &kp BACKSPACE  &lt 5 ENTER                                &mt RIGHT_SHIFT JP_DOT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        win1_layer {
            bindings = <
&kp JP_Q             &kp JP_W      &kp JP_E      &kp JP_R                  &kp JP_T                                                   &kp JP_Y     &kp JP_U  &kp JP_I  &kp JP_O  &kp JP_P
&kp JP_A             &kp JP_S      &kp JP_D      &kp JP_F                  &kp JP_G     &kp LC(V)                      &kp JP_EQUAL   &kp JP_H     &kp JP_J  &kp JP_K  &kp JP_L  &kp JP_MINUS
&mt LEFT_SHIFT JP_Z  &kp JP_X      &kp JP_C      &kp JP_V                  &kp JP_B     &kp LC(C)                      &kp JP_PLUS    &kp JP_N     &kp JP_M  &mkp MB1  &mkp MB2  &lt 10 JP_COMMA
&kp LCTRL            &kp LEFT_WIN  &kp LEFT_ALT  &lt 4 JP_MHEN  &lt 5 SPACE  &lt 10 JP_HENK      &kp BACKSPACE  &lt 5 ENTER                                &mt RIGHT_SHIFT JP_DOT
            >;
        };

        mac_layer {
            bindings = <
&kp JP_Q             &kp JP_W   &kp JP_E  &kp JP_R               &kp JP_T                                                &kp JP_Y     &kp JP_U  &kp JP_I  &kp JP_O  &kp JP_P
&kp JP_A             &kp JP_S   &kp JP_D  &kp JP_F               &kp JP_G     &kp LG(V)                   &kp JP_EQUAL   &kp JP_H     &kp JP_J  &kp JP_K  &kp JP_L  &kp JP_MINUS
&mt LEFT_SHIFT JP_Z  &kp JP_X   &kp JP_C  &kp JP_V               &kp JP_B     &kp LG(C)                   &kp JP_PLUS    &kp JP_N     &kp JP_M  &mkp MB1  &mkp MB2  &lt 10 JP_COMMA
&kp LGUI             &kp LCTRL  &kp LALT  &lt 6 INT4  &lt 7 SPACE  &lt 10 INT5      &kp BACKSPACE  &lt 7 ENTER                                &mt RIGHT_SHIFT JP_DOT
            >;
        };

        ipad_layer {
            bindings = <
&kp JP_Q             &kp JP_W   &kp JP_E  &kp JP_R               &kp JP_T                                                &kp JP_Y     &kp JP_U  &kp JP_I  &kp JP_O  &kp JP_P
&kp JP_A             &kp JP_S   &kp JP_D  &kp JP_F               &kp JP_G     &kp LG(V)                   &kp JP_EQUAL   &kp JP_H     &kp JP_J  &kp JP_K  &kp JP_L  &kp JP_MINUS
&mt LEFT_SHIFT JP_Z  &kp JP_X   &kp JP_C  &kp JP_V               &kp JP_B     &kp LG(C)                   &kp JP_PLUS    &kp JP_N     &kp JP_M  &mkp MB1  &mkp MB2  &lt 10 JP_COMMA
&kp LGUI             &kp LCTRL  &kp LALT  &lt 8 INT4  &lt 9 SPACE  &lt 10 INT5      &kp BACKSPACE  &lt 9 ENTER                                &mt RIGHT_SHIFT JP_DOT
            >;
        };

        win_NUM {
            bindings = <
&kp JP_LPAR       &kp JP_RPAR   &kp JP_MINUS  &kp JP_CARET  &kp JP_YEN                           &kp JP_SLASH  &kp N7  &kp N8  &kp N9  &kp JP_MINUS
&kp JP_SEMI       &kp JP_COLON  &kp JP_AT     &kp JP_LBKT   &kp JP_RBKT  &kp ESCAPE      &trans  &kp JP_ASTRK  &kp N4  &kp N5  &kp N6  &kp JP_PLUS
&kp LEFT_SHIFT    &kp JP_COMMA  &kp JP_DOT    &kp JP_SLASH  &kp JP_BSLH  &kp TAB         &trans  &kp N0        &kp N1  &kp N2  &kp N3  &kp JP_DOT
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &trans        &trans       &trans          &trans  &trans                                &mt RIGHT_SHIFT JP_EQUAL
            >;
        };

        win_ARROW {
            bindings = <
&kp ESCAPE      &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &kp F9  &kp F10                           &kp PRINTSCREEN  &kp LC(LG(LEFT_ARROW))  &kp LG(LC(D))   &kp LG(LC(RIGHT_ARROW))  &kp LS(LG(S))
&kp TAB         &kp LG(TAB)             &kp LG(LC(TAB))          &kp F6  &kp F7   &kp F8       &kp HOME    &kp PAGE_UP      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &mkp MB3
&kp LEFT_SHIFT  &kp JP_MHEN             &kp JP_HENK              &kp F4  &kp F5   &kp F11      &kp END     &kp PAGE_DOWN    &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &login
&kp LCTRL       &kp LEFT_WIN            &kp LEFT_ALT             &trans  &trans   &trans       &kp DELETE  &trans                                                                            &bitw
            >;
        };

        mac_NUM {
            bindings = <
&kp JP_LPAR     &kp JP_RPAR   &kp JP_MINUS  &kp JP_CARET  &kp JP_YEN                           &kp JP_SLASH  &kp N7  &kp N8  &kp N9  &kp JP_MINUS
&kp JP_SEMI     &kp JP_COLON  &kp JP_AT     &kp JP_LBKT   &kp JP_RBKT  &kp ESCAPE      &trans  &kp JP_ASTRK  &kp N4  &kp N5  &kp N6  &kp JP_PLUS
&kp LEFT_SHIFT  &kp JP_COMMA  &kp JP_DOT    &kp JP_SLASH  &kp JP_BSLH  &kp TAB         &trans  &kp N0        &kp N1  &kp N2  &kp N3  &kp JP_DOT
&kp LGUI        &kp LCTRL     &kp LALT      &trans        &trans       &trans          &trans  &trans                                &mt RIGHT_SHIFT JP_EQUAL
            >;
        };

        mac_ARROW {
            bindings = <
&kp ESCAPE      &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &kp F9     &kp F10                             &kp LS(LG(3))  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &kp LS(LG(4))
&kp TAB         &kp LG(TAB)             &kp LC(UP_ARROW)         &kp F6     &kp F7     &kp F8       &kp HOME    &kp PAGE_UP    &mkp MB4            &kp UP_ARROW      &mkp MB5             &mkp MB3
&kp LEFT_SHIFT  &kp LG(LS(K))           &kp SPACE                &kp LG(Y)  &kp LG(R)  &kp F11      &kp END     &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &login
&kp LGUI        &kp LCTRL               &kp LALT                 &trans     &trans     &trans       &kp DELETE  &trans                                                                    &bitw
            >;
        };

        ipad_NUM {
            bindings = <
&kp JP_LPAR     &kp JP_RPAR   &kp JP_MINUS  &kp JP_CARET  &kp JP_YEN                           &kp JP_SLASH  &kp N7  &kp N8  &kp N9  &kp JP_MINUS
&kp JP_SEMI     &kp JP_COLON  &kp JP_AT     &kp JP_LBKT   &kp JP_RBKT  &kp ESCAPE      &trans  &kp JP_ASTRK  &kp N4  &kp N5  &kp N6  &kp JP_PLUS
&kp LEFT_SHIFT  &kp JP_COMMA  &kp JP_DOT    &kp JP_SLASH  &kp JP_BSLH  &kp TAB         &trans  &kp N0        &kp N1  &kp N2  &kp N3  &kp JP_DOT
&kp LGUI        &kp LCTRL     &kp LALT      &trans        &trans       &trans          &trans  &trans                                &mt RIGHT_SHIFT JP_EQUAL
            >;
        };

        ipad_ARROW {
            bindings = <
&kp ESCAPE      &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &kp F9     &kp F10                             &kp LS(LG(3))  &kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &kp LS(LG(4))
&kp TAB         &kp LG(TAB)             &kp LC(UP_ARROW)         &kp F6     &kp F7     &kp F8       &kp HOME    &kp PAGE_UP    &mkp MB4            &kp UP_ARROW      &mkp MB5             &mkp MB3
&kp LEFT_SHIFT  &kp LG(LS(K))           &kp SPACE                &kp LG(Y)  &kp LG(R)  &kp F11      &kp END     &kp PAGE_DOWN  &kp LEFT_ARROW      &kp DOWN_ARROW    &kp RIGHT_ARROW      &login
&kp LGUI        &kp LCTRL               &kp LALT                 &trans     &trans     &trans       &kp DELETE  &trans                                                                    &bitw
            >;
        };

        BT {
            bindings = <
&trans          &trans                  &trans  &trans                   &trans                       &bt0    &bt1    &bt2    &bt3    &bt BT_SEL 4
&trans          &trans                  &trans  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans  &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &bt BT_CLR
&trans          &trans                  &trans  &trans                   &trans   &trans      &trans  &trans                          &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };
    };
};