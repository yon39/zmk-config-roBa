#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#include "config/keymap.h"

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        login: login {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N3 &kp N9 &kp LS(H) &kp O &kp T &kp S &kp P &kp A &kp C &kp E>;
            label = "LOGIN";
        };

        bitw: bitw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(I) &kp N &kp N &kp U &kp E &kp N &kp D &kp O &kp AT &kp N3 &kp N6 &kp N6 &kp N4>;
            label = "BITW";
        };

        cursor_speed_up: cursor_speed_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>;

            label = "CURSOR_SPEED_UP";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                          &kp T                                                        &kp Y        &kp U  &kp I     &kp O     &kp P
&kp A             &kp S         &kp D         &kp F                          &kp G        &kp LC(V)                        &kp EQUAL      &kp H        &kp J  &kp K     &kp L     &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                          &kp B        &kp LC(C)                        &kp SEMICOLON  &kp N        &kp M  &mkp MB1  &mkp MB2  &lt 5 COMMA
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 1 INT_MUHENKAN  &lt 2 SPACE  &lt_to_layer_0 3 INT_HENKAN      &kp BACKSPACE  &lt 2 ENTER                             &mt RIGHT_SHIFT PERIOD
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS     &kp TILDE         &kp BACKSLASH                               &kp SLASH     &kp N7  &kp N8  &kp N9  &kp MINUS
&kp SEMICOLON         &kp COLON              &kp AT_SIGN   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp ESCAPE      &kp F13  &kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp PLUS
&kp LEFT_SHIFT        &kp COMMA              &kp PERIOD    &kp SLASH         &kp UNDERSCORE     &kp TAB         &trans   &kp N0        &kp N1  &kp N2  &kp N3  &kp PERIOD
&kp LEFT_CONTROL      &kp LEFT_WIN           &kp LEFT_ALT  &trans            &trans             &trans          &trans   &trans                                &mt RIGHT_SHIFT EQUAL
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LG(LS(LEFT_ARROW))  &kp LG(LS(RIGHT_ARROW))  &kp F9  &kp F10                           &kp PRINTSCREEN  &kp LC(LG(LEFT_ARROW))  &kp LG(LC(D))   &kp LG(LC(RIGHT_ARROW))  &kp LS(LG(S))
&kp TAB         &kp LG(TAB)             &kp LG(LC(TAB))          &kp F6  &kp F7   &kp F8       &kp HOME    &kp PAGE_UP      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &mkp MB3
&kp LEFT_SHIFT  &kp INT_MUHENKAN        &kp INT_HENKAN           &kp F4  &kp F5   &kp F11      &kp END     &kp PAGE_DOWN    &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &login
&kp LCTRL       &kp LEFT_WIN            &kp LEFT_ALT             &trans  &trans   &trans       &kp DELETE  &trans                                                                            &bitw
            >;
        };

        BT {
            bindings = <
&trans          &trans                  &trans  &trans                   &trans                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans          &trans                  &trans  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans        &trans        &trans        &trans        &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans  &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans          &trans                  &trans  &trans                   &trans   &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
